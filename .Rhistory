variables_in <- rowSums(variables_in)
# levels_in <-lapply(levels_variables,function(x){
#   grepl(as.character(x),draw_summary$key)
# }) %>% bind_cols()
#
# levels_in <- rowSums(levels_in)
#
sd_in <- as.numeric(grepl("sd_",draw_summary$key))
subset <- sd_in>0 & variables_in > 0
mixed_effects <- draw_summary$key[subset]
names <- gsub(".*__","",mixed_effects)
mixed_effects <- setNames(mixed_effects,names) %>% as.list()
mixed_effects_summary <- draw_summary %>% filter(key %in% as.character(mixed_effects))
clean_names <- names(mixed_effects)[match(mixed_effects_summary$key,as.character(mixed_effects))]
mixed_effects_summary$key <- clean_names
clean_names <- names(variables)[match(mixed_effects_summary$key,as.character(variables))]
mixed_effects_summary$key <- clean_names
mixed_effects_summary$key <- factor(mixed_effects_summary$key,
levels=names(variables),
ordered = T)
mixed_plots <- quick_estimates_plot(mixed_effects_summary, title=paste0("Random Effects for Model ", model_name), sort=T)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/mixed_effects_plots.png"),
plot = mixed_plots,width = 5000,height=3500,units = "px")
variables_in <- lapply(variables,function(x){
grepl(as.character(x),draw_summary$key)
}) %>% bind_cols()
variables_in <- rowSums(variables_in)
sd_in <- as.numeric(grepl("r_",draw_summary$key))
subset <- sd_in>0 & variables_in > 0
subset
table(subset)
random_effects <- draw_summary$key[subset]
names <- gsub(".*__","",random_effects)
random_effects <- setNames(random_effects,names) %>% as.list()
random_effects
random_effects <- draw_summary$key[subset]
names <- gsub(".*,","",random_effects)
random_effects <- setNames(random_effects,names) %>% as.list()
random_effects
levels <- gsub(".*[","",random_effects)
levels <- gsub(".*\\[","",random_effects)
levels
grepl(as.character(x),draw_summary$key)
variables_in <- lapply(variables,function(x){
grepl(as.character(x),draw_summary$key)
}) %>% bind_cols()
variables_in <- rowSums(variables_in)
r_in <- as.numeric(grepl("^r_",draw_summary$key))
subset <- r_in >0 & variables_in > 0
random_effects <- draw_summary$key[subset]
random_effects
names <- gsub(".*,","",random_effects)
names <- gsub("\\]","",names)
names
levels <- gsub(".*\\[","",random_effects)
levels
levels <- gsub(",.*","",random_effects)
levels <- gsub(".*\\[","",random_effects)
levels <- gsub(",.*","",levels)
levels
random_effects
effect_names <- tibble(
level=levels,
variable=names,
random_effect=random_effects
)
effect_names
variable_to_plot <- "log_land_cultivated"
variable_to_plot
effect_names
random_effects <- setNames(effect_names$random_effect,variable_to_plot) %>% as.list()
random_effects
variable_to_plot
effect_names$random_effect
mixed_effects
all_vars <- effect_names$level[effect_names$variable==variable_to_plot]
all_vars
all_levels <- effect_names$level[effect_names$variable==variable_to_plot]
all_levels <- effect_names$level[effect_names$variable==variable_to_plot]
all_vars <- effect_names$variable[effect_names$variable==variable_to_plot]
random_effects <- setNames(all_vars,all_levels) %>% as.list()
random_effects
all_vars
all_levels <- effect_names$level[effect_names$variable==variable_to_plot]
all_effects <- effect_names$random_effect[effect_names$variable==variable_to_plot]
random_effects <- setNames(all_vars,all_levels) %>% as.list()
random_effects
effect_names$random_effect
all_levels <- effect_names$level[effect_names$variable==variable_to_plot]
all_effects <- effect_names$random_effect[effect_names$variable==variable_to_plot]
random_effects <- setNames(all_effects,all_levels) %>% as.list()
random_effects
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
random_effects_summary
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
clean_names <- names(random_effects)[match(mixed_effects_summary$key,as.character(random_effects))]
mixed_effects_summary$key <- clean_names
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
clean_names <- names(random_effects)[match(mixed_effects_summary$key,as.character(random_effects))]
random_effects_summary$key <- clean_names
random_effects_summary
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
clean_names <- names(random_effects)[match(mixed_effects_summary$key,as.character(random_effects))]
clean_names
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
clean_names <- names(random_effects)[match(random_effects_summary$key,as.character(random_effects))]
random_effects_summary$key <- clean_names
random_effects_summary
random_plots <- quick_estimates_plot(random_effects_summary, title=paste0("Random Effects for Model: ", model_name,'\nVariable: ',variable_to_plot), sort=T)
random_plots
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/random_effects/",variable_to_plot,".png"),
plot = mixed_plots,width = 5000,height=5000,units = "px")
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/random_effects/",variable_to_plot,".png"),
plot = random_plots,width = 5000,height=5000,units = "px")
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/random_effects/",variable_to_plot,".png"),
plot = random_plots,width = 5000,height=4500,units = "px")
effect_names
all_variables <- unique(effect_names$variable)
for (variable_to_plot in all_variables){
all_levels <- effect_names$level[effect_names$variable==variable_to_plot]
all_effects <- effect_names$random_effect[effect_names$variable==variable_to_plot]
random_effects <- setNames(all_effects,all_levels) %>% as.list()
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
clean_names <- names(random_effects)[match(random_effects_summary$key,as.character(random_effects))]
random_effects_summary$key <- clean_names
random_plots <- quick_estimates_plot(random_effects_summary, title=paste0("Random Effects for Model: ", model_name,'\nVariable: ',variable_to_plot), sort=T)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/random_effects/",variable_to_plot,".png"),
plot = random_plots,width = 5000,height=4500,units = "px")
}
all_plots <- function(model,
model_name,
variables,
levels_variables
){
dir.create(paste0("outputs/overall_model_results/variable_addition/",model_name))
all_vars <- get_variables(model)
draws_df <- as_draws_df(model)
draws.66 <- draws_df %>%
gather() %>%
group_by(key) %>%
summarise(
Estimate=mean(value),
min=quantile(value,probs=c(0.17)),
max=quantile(value,probs=c(0.83)),
level="0.66 Level",
)
draws.95 <-draws_df %>%
gather() %>%
group_by(key) %>%
summarise(
Estimate=mean(value),
min=quantile(value,probs=c(0.025)),
max=quantile(value,probs=c(0.975)),
level="0.95 Level",
)
draw_summary <- rbind(draws.66,draws.95)
# Plotting Levels Estimates
levels_summary <- draw_summary %>% filter(key %in% as.character(levels_variables))
clean_names <- names(levels_variables)[match(levels_summary$key,as.character(levels_variables))]
levels_summary$key <- clean_names
levels_summary$key <- factor(levels_summary$key,
levels=names(levels_variables),
ordered = T)
levels_plots <- quick_estimates_plot(levels_summary, title=paste0("Levels of Variation for Model ", model_name), sort=F)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/levels_estimates.png"),
plot = levels_plots,width = 5000,height=3500,units = "px")
# Plotting Fixed Effects
fixed_effects <- c(paste0("b_",variables))
fixed_effects <- setNames(fixed_effects,variables) %>% as.list()
fixed_effects_summary <- draw_summary %>% filter(key %in% as.character(fixed_effects))
clean_names <- names(fixed_effects)[match(fixed_effects_summary$key,as.character(fixed_effects))]
fixed_effects_summary$key <- clean_names
clean_names <- names(variables)[match(fixed_effects_summary$key,as.character(variables))]
fixed_effects_summary$key <- clean_names
fixed_effects_summary$key <- factor(fixed_effects_summary$key,
levels=names(variables),
ordered = T)
fixed_plots <- quick_estimates_plot(fixed_effects_summary, title=paste0("Fixed Effects for Model ", model_name), sort=T)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/fixed_effects_plots.png"),
plot = fixed_plots,width = 5000,height=3500,units = "px")
# Mixed  Effects
variables_in <- lapply(variables,function(x){
grepl(as.character(x),draw_summary$key)
}) %>% bind_cols()
variables_in <- rowSums(variables_in)
# levels_in <-lapply(levels_variables,function(x){
#   grepl(as.character(x),draw_summary$key)
# }) %>% bind_cols()
#
# levels_in <- rowSums(levels_in)
#
sd_in <- as.numeric(grepl("sd_",draw_summary$key))
subset <- sd_in>0 & variables_in > 0
if (any(subset)){
mixed_effects <- draw_summary$key[subset]
names <- gsub(".*__","",mixed_effects)
mixed_effects <- setNames(mixed_effects,names) %>% as.list()
mixed_effects_summary <- draw_summary %>% filter(key %in% as.character(mixed_effects))
clean_names <- names(mixed_effects)[match(mixed_effects_summary$key,as.character(mixed_effects))]
mixed_effects_summary$key <- clean_names
clean_names <- names(variables)[match(mixed_effects_summary$key,as.character(variables))]
mixed_effects_summary$key <- clean_names
mixed_effects_summary$key <- factor(mixed_effects_summary$key,
levels=names(variables),
ordered = T)
mixed_plots <- quick_estimates_plot(mixed_effects_summary, title=paste0("Random Effects for Model ", model_name), sort=T)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/mixed_effects_plots.png"),
plot = mixed_plots,width = 5000,height=3500,units = "px")
# Plotting random effects
dir.create(paste0("outputs/overall_model_results/variable_addition/",model_name,"/random_effects"))
variables_in <- lapply(variables,function(x){
grepl(as.character(x),draw_summary$key)
}) %>% bind_cols()
variables_in <- rowSums(variables_in)
r_in <- as.numeric(grepl("^r_",draw_summary$key))
# cor_not_in <- as.numeric(!grepl("corr_",draw_summary$key))
subset <- r_in >0 & variables_in > 0
random_effects <- draw_summary$key[subset]
names <- gsub(".*,","",random_effects)
names <- gsub("\\]","",names)
levels <- gsub(".*\\[","",random_effects)
levels <- gsub(",.*","",levels)
effect_names <- tibble(
level=levels,
variable=names,
random_effect=random_effects
)
all_variables <- unique(effect_names$variable)
for (variable_to_plot in all_variables){
all_levels <- effect_names$level[effect_names$variable==variable_to_plot]
all_effects <- effect_names$random_effect[effect_names$variable==variable_to_plot]
random_effects <- setNames(all_effects,all_levels) %>% as.list()
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
clean_names <- names(random_effects)[match(random_effects_summary$key,as.character(random_effects))]
random_effects_summary$key <- clean_names
random_plots <- quick_estimates_plot(random_effects_summary, title=paste0("Random Effects for Model: ", model_name,'\nVariable: ',variable_to_plot), sort=T)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/random_effects/",variable_to_plot,".png"),
plot = random_plots,width = 5000,height=4500,units = "px")
}
}
}
quick_estimates_plot <- function(draw_summary, title,sort=F){
if(sort==T){
factor_order <- draw_summary$key[order(draw_summary$Estimate[draw_summary$level=="0.66 Level"])]
draw_summary$key <- factor(draw_summary$key, levels=factor_order,ordered = T)
}
plot <- ggplot(draw_summary, aes(y = key,x=Estimate,shape="Estimate"))+
geom_point(show.legend = T,size=3)+
geom_segment(aes(y=key,yend=key,x=min,xend=max,linewidth=level))+
scale_discrete_manual("linewidth", values = c("0.95 Level"=0.75, "0.66 Level"=1.5))+
labs(x="Estimate", y="", title=title)+
guides(linewidth = guide_legend(title="",
nrow = 2,
byrow = TRUE,
override.aes = list(shape = c(NA), linetype = c("solid", "solid"))),
shape=guide_legend(title="")) +
theme(plot.title = element_text(hjust=0.5))
return(plot)
}
dir.create(paste0("outputs/overall_model_results/variable_addition/"))
variables <- list(
# "Education (Pre Primary)"="education_cleanedpre_primary",
"Education (Primary)"="education_cleanedprimary",
"Education (Secondary)"="education_cleanedsecondary_or_higher",
"Livestock TLU"="log_livestock_tlu",
"Land Cultivated"="log_land_cultivated",
"Off Farm Orientation"="logit_off_farm_orientation",
"Market Orientation"="logit_market_orientation",
"Female Control"="logit_proportion_female_control",
"Income Diversity"="log_income_diversity",
"Growing Period"="norm_growing_period",
"Minimum Travel Time"="log_min_travel_time",
"County Life Expectancy"="norm_gdl_lifexp"
)
levels_variables <- list(
"Country"="sd_iso_country_code__Intercept",
"Village"="sd_iso_country_code:village__Intercept",
"Project"="sd_id_form__Intercept",
"Unexplained"="sigma"
)
model_files <- list.files("outputs/14_04_2023/outputs/overall_models/variable_addition/")
model_files <- model_files[grepl("^r2",x=model_files)==F & grepl("^loo",x=model_files)==F]
for (model_file in model_files){
model_name <- gsub(".rda","",model_file,fixed=T)
model <- loadRData(paste0("outputs/14_04_2023/outputs/overall_models/variable_addition/",model_file))
all_plots(model=model,
model_name = model_name,
variables = variables,
levels_variables = levels_variables
)
}
all_plots <- function(model,
model_name,
variables,
levels_variables
){
dir.create(paste0("outputs/overall_model_results/variable_addition/",model_name))
all_vars <- get_variables(model)
draws_df <- as_draws_df(model)
draws.66 <- draws_df %>%
gather() %>%
group_by(key) %>%
summarise(
Estimate=mean(value),
min=quantile(value,probs=c(0.17)),
max=quantile(value,probs=c(0.83)),
level="0.66 Level",
)
draws.95 <-draws_df %>%
gather() %>%
group_by(key) %>%
summarise(
Estimate=mean(value),
min=quantile(value,probs=c(0.025)),
max=quantile(value,probs=c(0.975)),
level="0.95 Level",
)
draw_summary <- rbind(draws.66,draws.95)
# Plotting Levels Estimates
levels_summary <- draw_summary %>% filter(key %in% as.character(levels_variables))
clean_names <- names(levels_variables)[match(levels_summary$key,as.character(levels_variables))]
levels_summary$key <- clean_names
levels_summary$key <- factor(levels_summary$key,
levels=names(levels_variables),
ordered = T)
levels_plots <- quick_estimates_plot(levels_summary, title=paste0("Levels of Variation for Model ", model_name), sort=F)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/levels_estimates.png"),
plot = levels_plots,width = 5000,height=3500,units = "px")
# Plotting Fixed Effects
fixed_effects <- c(paste0("b_",variables))
fixed_effects <- setNames(fixed_effects,variables) %>% as.list()
fixed_effects_summary <- draw_summary %>% filter(key %in% as.character(fixed_effects))
clean_names <- names(fixed_effects)[match(fixed_effects_summary$key,as.character(fixed_effects))]
fixed_effects_summary$key <- clean_names
clean_names <- names(variables)[match(fixed_effects_summary$key,as.character(variables))]
fixed_effects_summary$key <- clean_names
fixed_effects_summary$key <- factor(fixed_effects_summary$key,
levels=names(variables),
ordered = T)
fixed_plots <- quick_estimates_plot(fixed_effects_summary, title=paste0("Fixed Effects for Model ", model_name), sort=T)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/fixed_effects_plots.png"),
plot = fixed_plots,width = 5000,height=3500,units = "px")
# Mixed  Effects
variables_in <- lapply(variables,function(x){
grepl(as.character(x),draw_summary$key)
}) %>% bind_cols()
variables_in <- rowSums(variables_in)
# levels_in <-lapply(levels_variables,function(x){
#   grepl(as.character(x),draw_summary$key)
# }) %>% bind_cols()
#
# levels_in <- rowSums(levels_in)
#
sd_in <- as.numeric(grepl("sd_",draw_summary$key))
subset <- sd_in>0 & variables_in > 0
if (any(subset)){
mixed_effects <- draw_summary$key[subset]
names <- gsub(".*__","",mixed_effects)
mixed_effects <- setNames(mixed_effects,names) %>% as.list()
mixed_effects_summary <- draw_summary %>% filter(key %in% as.character(mixed_effects))
clean_names <- names(mixed_effects)[match(mixed_effects_summary$key,as.character(mixed_effects))]
mixed_effects_summary$key <- clean_names
clean_names <- names(variables)[match(mixed_effects_summary$key,as.character(variables))]
mixed_effects_summary$key <- clean_names
mixed_effects_summary$key <- factor(mixed_effects_summary$key,
levels=names(variables),
ordered = T)
mixed_plots <- quick_estimates_plot(mixed_effects_summary, title=paste0("Random Effects for Model ", model_name), sort=T)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/mixed_effects_plots.png"),
plot = mixed_plots,width = 5000,height=3500,units = "px")
# Plotting random effects
dir.create(paste0("outputs/overall_model_results/variable_addition/",model_name,"/random_effects"))
variables_in <- lapply(variables,function(x){
grepl(as.character(x),draw_summary$key)
}) %>% bind_cols()
variables_in <- rowSums(variables_in)
r_in <- as.numeric(grepl("^r_",draw_summary$key))
# cor_not_in <- as.numeric(!grepl("corr_",draw_summary$key))
subset <- r_in >0 & variables_in > 0
random_effects <- draw_summary$key[subset]
names <- gsub(".*,","",random_effects)
names <- gsub("\\]","",names)
levels <- gsub(".*\\[","",random_effects)
levels <- gsub(",.*","",levels)
effect_names <- tibble(
level=levels,
variable=names,
random_effect=random_effects
)
all_variables <- unique(effect_names$variable)
for (variable_to_plot in all_variables){
all_levels <- effect_names$level[effect_names$variable==variable_to_plot]
all_effects <- effect_names$random_effect[effect_names$variable==variable_to_plot]
random_effects <- setNames(all_effects,all_levels) %>% as.list()
random_effects_summary <- draw_summary %>% filter(key %in% as.character(random_effects))
clean_names <- names(random_effects)[match(random_effects_summary$key,as.character(random_effects))]
random_effects_summary$key <- clean_names
random_plots <- quick_estimates_plot(random_effects_summary, title=paste0("Random Effects for Model: ", model_name,'\nVariable: ',variable_to_plot), sort=T)
ggsave(filename = paste0("outputs/overall_model_results/variable_addition/",model_name,"/random_effects/",variable_to_plot,".png"),
plot = random_plots,width = 5000,height=4500,units = "px")
}
}
}
quick_estimates_plot <- function(draw_summary, title,sort=F){
if(sort==T){
factor_order <- draw_summary$key[order(draw_summary$Estimate[draw_summary$level=="0.66 Level"])]
draw_summary$key <- factor(draw_summary$key, levels=factor_order,ordered = T)
}
plot <- ggplot(draw_summary, aes(y = key,x=Estimate,shape="Estimate"))+
geom_point(show.legend = T,size=3)+
geom_segment(aes(y=key,yend=key,x=min,xend=max,linewidth=level))+
scale_discrete_manual("linewidth", values = c("0.95 Level"=0.75, "0.66 Level"=1.5))+
labs(x="Estimate", y="", title=title)+
guides(linewidth = guide_legend(title="",
nrow = 2,
byrow = TRUE,
override.aes = list(shape = c(NA), linetype = c("solid", "solid"))),
shape=guide_legend(title="")) +
theme(plot.title = element_text(hjust=0.5))
return(plot)
}
dir.create(paste0("outputs/overall_model_results/variable_addition/"))
variables <- list(
# "Education (Pre Primary)"="education_cleanedpre_primary",
"Education (Primary)"="education_cleanedprimary",
"Education (Secondary)"="education_cleanedsecondary_or_higher",
"Livestock TLU"="log_livestock_tlu",
"Land Cultivated"="log_land_cultivated",
"Off Farm Orientation"="logit_off_farm_orientation",
"Market Orientation"="logit_market_orientation",
"Female Control"="logit_proportion_female_control",
"Income Diversity"="log_income_diversity",
"Growing Period"="norm_growing_period",
"Minimum Travel Time"="log_min_travel_time",
"County Life Expectancy"="norm_gdl_lifexp"
)
levels_variables <- list(
"Country"="sd_iso_country_code__Intercept",
"Village"="sd_iso_country_code:village__Intercept",
"Project"="sd_id_form__Intercept",
"Unexplained"="sigma"
)
model_files <- list.files("outputs/14_04_2023/outputs/overall_models/variable_addition/")
model_files <- model_files[grepl("^r2",x=model_files)==F & grepl("^loo",x=model_files)==F]
for (model_file in model_files){
model_name <- gsub(".rda","",model_file,fixed=T)
model <- loadRData(paste0("outputs/14_04_2023/outputs/overall_models/variable_addition/",model_file))
all_plots(model=model,
model_name = model_name,
variables = variables,
levels_variables = levels_variables
)
}
library(brms)
library(ggplot2)
library(ggridges)
library(dplyr)
library(tidyr)
library(ggdist)
library(magrittr)
library(optparse)
library(projpred)
library(cmdstanr)
opt <- list(
output="outputs/14_04_2023/outputs/overall_models/",
ncores=4,
index="1"
)
# opt <- list(
#   output="outputs/14_04_2023/outputs/overall_models/",
#   ncores=4,
#   index="1"
# )
writeLines("test_file_output",paste0(opt$output,"/test_file.txt"))
opt$output <- gsub("/$", "", opt$output)
dir.create(opt$output)
dir.create(opt$output,"/proj_pred/")
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
ref_model <- loadRData(paste0(opt$output,"/weak_prior_tva.rda"))
ref_model <- projpred::get_refmodel(ref_model)
ref_model
?cv_varsel
parallel::detectCores()
?cv_varsel
source("~/research/phd/chapter-6-analysis/src/04-interpretation/03-variable-addition.R", echo=TRUE)
save_as_image(loo_compare_flextable, "outputs/overall_model_results/variable_addition/loo_comparison.png")
library(flextable)
save_as_image(loo_compare_flextable, "outputs/overall_model_results/variable_addition/loo_comparison.png")
model_file
source("~/research/phd/chapter-6-analysis/src/04-interpretation/03-variable-addition.R", echo=TRUE)
?cv_varsel
library(brms)
library(ggplot2)
library(ggridges)
library(dplyr)
library(tidyr)
library(ggdist)
library(magrittr)
library(optparse)
library(projpred)
library(cmdstanr)
opt <- list(
output="outputs/14_04_2023/outputs/overall_models/",
ncores=4,
index="1"
)
?include_graphics
