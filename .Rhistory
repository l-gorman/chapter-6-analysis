geom_point()+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84))
ggplot(full_draw_summaries[subset,],aes(y=project,x=estimate))+
geom_point()+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2)+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1)
ggplot(full_draw_summaries[subset,],aes(y=project,x=estimate))+
geom_point()+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="grey")+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="grey")
ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="grey")+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="grey")+
geom_point(aes(y=project,x=estimate))+
draw_summar
ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="grey")+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="grey")+
geom_point(aes(y=project,x=estimate))
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategrey")+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="grey")+
geom_point(aes(y=project,x=estimate))
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray")+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="grey")+
geom_point(aes(y=project,x=estimate))
variable_summary
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="grey")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray")+
geom_point(aes(y=project,x=estimate))
variable_summary
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="darkslategray4")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray")+
geom_point(aes(y=project,x=estimate))
variable_summary
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="darkslategray")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray")+
geom_point(aes(y=project,x=estimate))
variable_summary
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="darkslategray4")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray4")+
geom_point(aes(y=project,x=estimate))
variable_summary
for (variable in unique(full_draw_summaries$key)){
for (model in unique(full_draw_summaries$model)){
dir.create(paste0("./outputs/per_project_summaries/variable_effects/",model),showWarnings = F)
subset <- full_draw_summaries$key==variable&
full_draw_summaries$model==model
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="darkslategray4")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray4")+
geom_point(aes(y=project,x=estimate))+
labs(title=paste0("Variable Summary: ", variable," (Model Type: ", model),
x="Draws Distribution",
y="Form ID")
ggsave(filename = paste0("./outputs/per_project_summaries/variable_effects/",model,"/",variable,".png"),
width = 800,
height=1500)
}
}
for (variable in unique(full_draw_summaries$key)){
for (model in unique(full_draw_summaries$model)){
dir.create(paste0("./outputs/per_project_summaries/variable_effects/",model),showWarnings = F)
subset <- full_draw_summaries$key==variable&
full_draw_summaries$model==model
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="darkslategray4")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray4")+
geom_point(aes(y=project,x=estimate))+
labs(title=paste0("Variable Summary: ", variable," (Model Type: ", model),
x="Draws Distribution",
y="Form ID")
ggsave(filename = paste0("./outputs/per_project_summaries/variable_effects/",model,"/",variable,".png"),
width = 800,
height=1500,units = "px")
}
}
variable
for (variable in unique(full_draw_summaries$key)){
for (model in unique(full_draw_summaries$model)){
dir.create(paste0("./outputs/per_project_summaries/variable_effects/",model),showWarnings = F)
subset <- full_draw_summaries$key==variable&
full_draw_summaries$model==model
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="darkslategray4")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray4")+
geom_point(aes(y=project,x=estimate))+
labs(title=paste0("Variable Summary: ", variable," (Model Type: ", model),
x="Draws Distribution",
y="Form ID")
ggsave(filename = paste0("./outputs/per_project_summaries/variable_effects/",model,"/",variable,".png"),
width = 1500,
height=1500,units = "px")
}
}
for (variable in unique(full_draw_summaries$key)){
for (model in unique(full_draw_summaries$model)){
dir.create(paste0("./outputs/per_project_summaries/variable_effects/",model),showWarnings = F)
subset <- full_draw_summaries$key==variable&
full_draw_summaries$model==model
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="darkslategray4")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray4")+
geom_point(aes(y=project,x=estimate))+
labs(title=paste0("Variable Summary: ", variable,"\n(Model Type: ", model),
x="Draws Distribution",
y="Form ID")
ggsave(filename = paste0("./outputs/per_project_summaries/variable_effects/",model,"/",variable,".png"),
width = 1500,
height=1500,units = "px")
}
}
for (variable in unique(full_draw_summaries$key)){
for (model in unique(full_draw_summaries$model)){
dir.create(paste0("./outputs/per_project_summaries/variable_effects/",model),showWarnings = F)
subset <- full_draw_summaries$key==variable&
full_draw_summaries$model==model
variable_summary <- ggplot(full_draw_summaries[subset,])+
geom_segment(aes(y=project,yend=project,x=q.05,xend=q.95),size = 1,color="darkslategray4")+
geom_segment(aes(y=project,yend=project,x=q.16,xend=q.84), size = 2, color="darkslategray4")+
geom_point(aes(y=project,x=estimate))+
labs(title=paste0("Variable Summary: ", variable,"\n(Model Type: ", model),
x="Draws Distribution",
y="Form ID")
ggsave(filename = paste0("./outputs/per_project_summaries/variable_effects/",model,"/",variable,".png"),
width = 1500,
height=2000,units = "px")
}
}
opt <- list(
iter=20,
warmup=10,
data="./data/",
output="./outputs/test/overall_model_proj",
ncores=4,
proj='1'
)
options(mc.cores = opt$ncores, brms.backend = "cmdstanr") # allows threading
opt$data <- gsub("/$", "", opt$data)
opt$output <- gsub("/$", "", opt$output)
dir.create(opt$output)
opt <- list(
iter=20,
warmup=10,
data="./data/",
output="./outputs/test_overall_model_proj",
ncores=4,
proj='1'
)
options(mc.cores = opt$ncores, brms.backend = "cmdstanr") # allows threading
opt$data <- gsub("/$", "", opt$data)
opt$output <- gsub("/$", "", opt$output)
dir.create(opt$output)
writeLines("test_file_output",paste0(opt$output,"/test_file.txt"))
indicator_data <- readr::read_csv(paste0(opt$data,"/02-prepared-data/modelling_df.csv"))
indicator_data$combined_fs_score <- factor(indicator_data$combined_fs_score,
levels=c("severely_fi","moderately_fi","mildly_fi","not_fi"),
ordered = T)
dir.create(paste0(opt$output,"/",project_id))
dir.create(paste0(opt$output,"/overall_models/"))
as.numeric(opt$j)==1
opt$j
opt <- list(
iter=20,
warmup=10,
data="./data/",
output="./outputs/test_overall_model_proj",
ncores=4,
index='1'
)
as.numeric(opt$index)==1
location_only_food_sec <- brm(
formula=combined_fs_score ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:gdlcode) +
(1 | iso_country_code:gdlcode:village),
# (1 | village),
data = indicator_data,
prior = c(
set_prior("normal(0,1)", class="b"),
set_prior('normal(0, 1)', class = 'sd'),
# set_prior('normal(0, 1)', class = 'sigma'),
set_prior('normal(0, 1)', class = 'Intercept')
),
cores = 4,
backend = "cmdstanr",
iter = opt$iter,
warmup = opt$warmup,
family=cumulative("logit")
)
location_only_food_sec <- brm(
formula=combined_fs_score ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:gdlcode) +
(1 | iso_country_code:gdlcode:village),
# (1 | village),
data = indicator_data,
prior = c(
set_prior("normal(0, 1)", class = "b"),
set_prior('normal(0, 1)', class = 'sd'),
# set_prior('normal(0, 1)', class = 'sigma'),
set_prior('normal(0, 1)', class = 'Intercept')
),
cores = 4,
backend = "cmdstanr",
iter = opt$iter,
warmup = opt$warmup,
family=cumulative("logit")
)
# sbatch src/03-modelling/01-per-project-models.sh
library(brms)
# library(ggplot2)
# library(ggridges)
library(dplyr)
library(tidyr)
# library(ggdist)
library(magrittr)
library(optparse)
library(fastDummies)
# library(projpred)
library(cmdstanr)
location_only_food_sec <- brm(
formula=combined_fs_score ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:gdlcode) +
(1 | iso_country_code:gdlcode:village),
# (1 | village),
data = indicator_data,
prior = c(
set_prior("normal(0, 1)", class = "b"),
set_prior('normal(0, 1)', class = 'sd'),
# set_prior('normal(0, 1)', class = 'sigma'),
set_prior('normal(0, 1)', class = 'Intercept')
),
cores = 4,
backend = "cmdstanr",
iter = opt$iter,
warmup = opt$warmup,
family=cumulative("logit")
)
indicator_data
location_only_tva <- brm(
formula=log_tva ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:gdlcode) +
(1 | iso_country_code:gdlcode:village),
# (1 | village),
data = indicator_data,
prior = c(
set_prior("normal(0,1)", class="b"),
set_prior('normal(0, 1)', class = 'sd'),
# set_prior('normal(0, 1)', class = 'sigma'),
set_prior('normal(0, 1)', class = 'Intercept')
),
cores = 4,
backend = "cmdstanr",
iter = opt$iter,
warmup = opt$warmup,
family=gaussian()
)
library(brms)
# library(ggplot2)
# library(ggridges)
library(dplyr)
library(tidyr)
# library(ggdist)
library(magrittr)
library(optparse)
library(fastDummies)
# library(projpred)
library(cmdstanr)
opt <- list(
iter=20,
warmup=10,
data="./data/",
output="./outputs/test_overall_model_proj",
ncores=4,
index='1'
)
options(mc.cores = opt$ncores, brms.backend = "cmdstanr") # allows threading
opt$data <- gsub("/$", "", opt$data)
opt$output <- gsub("/$", "", opt$output)
dir.create(opt$output)
writeLines("test_file_output",paste0(opt$output,"/test_file.txt"))
indicator_data <- readr::read_csv(paste0(opt$data,"/02-prepared-data/modelling_df.csv"))
indicator_data$combined_fs_score <- factor(indicator_data$combined_fs_score,
levels=c("severely_fi","moderately_fi","mildly_fi","not_fi"),
ordered = T)
dir.create(paste0(opt$output,"/overall_models/"))
as.numeric(opt$index)==1
location_only_food_sec <- brm(
formula=combined_fs_score ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:gdlcode) +
(1 | iso_country_code:gdlcode:village),
# (1 | village),
data = indicator_data,
prior = c(
set_prior("normal(0, 1)", class = "b"),
set_prior('normal(0, 1)', class = 'sd'),
# set_prior('normal(0, 1)', class = 'sigma'),
set_prior('normal(0, 1)', class = 'Intercept')
),
cores = 4,
backend = "cmdstanr",
iter = opt$iter,
warmup = opt$warmup,
family=cumulative("logit")
)
location_only_tva <- brm(
formula=log_tva ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:gdlcode) +
(1 | iso_country_code:gdlcode:village),
# (1 | village),
data = indicator_data,
prior = c(
set_prior("normal(0,1)", class="b"),
set_prior('normal(0, 1)', class = 'sd'),
# set_prior('normal(0, 1)', class = 'sigma'),
set_prior('normal(0, 1)', class = 'Intercept')
),
cores = 4,
backend = "cmdstanr",
iter = opt$iter,
warmup = opt$warmup,
family=gaussian()
)
location_only_food_sec <- brm(
formula=combined_fs_score ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:gdlcode) +
(1 | iso_country_code:gdlcode:village),
# (1 | village),
data = indicator_data,
prior = c(
set_prior('normal(0, 1)', class = 'sd'),
# set_prior('normal(0, 1)', class = 'sigma'),
set_prior('normal(0, 1)', class = 'Intercept')
),
cores = 4,
backend = "cmdstanr",
iter = opt$iter,
warmup = opt$warmup,
family=cumulative("logit")
)
location_only_tva <- brm(
formula=log_tva ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:gdlcode) +
(1 | iso_country_code:gdlcode:village),
# (1 | village),
data = indicator_data,
prior = c(
set_prior('normal(0, 1)', class = 'sd'),
# set_prior('normal(0, 1)', class = 'sigma'),
set_prior('normal(0, 1)', class = 'Intercept')
),
cores = 4,
backend = "cmdstanr",
iter = opt$iter,
warmup = opt$warmup,
family=gaussian()
)
renv::status()
renv::snapshot()
scp -r lg14410@bc4login.acrc.bris.ac.uk:/user/work/lg14410/chapter-6/outputs/ ./outputs/14_04_2023
library(readr)
library(tidyr)
library(tibble)
library(magrittr)
library(dplyr)
library(tidybayes)
library(brms)
library(ggplot2)
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
model <- loadRData("./outputs/14_04_2023/outputs/overall_models/location_only_food_sec.rda")
model
model <- loadRData("./outputs/14_04_2023/outputs/overall_models/location_only_tva.rda")
model
#
location_tva_model <- loadRData("./outputs/14_04_2023/outputs/overall_models/location_only_tva.rda")
location_tva_model
get_variables(location_tva_model)
get_variables(location_tva_model)[1:10]
#get_variables(location_tva_model)[1:10]
params <- c("sd_iso_country_code__Intercept",
"sd_iso_country_code:gdlcode__Intercept",
"sd_iso_country_code:gdlcode:village__Intercept",
"sigma")
params
draws <- as_draws_df(model)[params]
draws
vpc <- function(model, params){
draws_df <-  as_draws_df(model)[params]
vpcs <- list()
for (param in params){
other_params <- params[params!=param]
vpcs[[param]] <- draws_df[[param]]^2/rowSums(draws_df[params]^2)
}
vpcs <- vpcs %>% as_tibble()
return(vpcs)
}
vpcs <- vpc(model,params)
vpcs
vpcs %>%
gather() %>%
ggplot(aes(y = key, x = value)) +
stat_halfeye(aes(fill = after_stat(level))) +
scale_fill_brewer(na.translate = FALSE) +
labs(y="", x="",title = "")+
# scale_y_discrete(name=xlab,
#                  breaks=params,
#                  labels=readable_params)
ggplot(vpcs,)
vpcs %>%
gather()
vpcs %>%
gather() %>%
ggplot(aes(y = key, x = value)) +
stat_halfeye(aes(fill = after_stat(level))) +
scale_fill_brewer(na.translate = FALSE) +
labs(y="", x="",title = "")
# Full TVA -------------------------------------------------------
location_tva_model <- loadRData("./outputs/14_04_2023/outputs/overall_models/location_only_tva.rda")
location_tva_model
# Full TVA -------------------------------------------------------
location_tva_model <- loadRData("./outputs/14_04_2023/outputs/overall_models/horseshoe_tva.rda")
# Full TVA -------------------------------------------------------
full_tva_model <- loadRData("./outputs/14_04_2023/outputs/overall_models/horseshoe_tva.rda")
#get_variables(location_tva_model)[1:10]
params <- c("sd_iso_country_code__Intercept",
"sd_iso_country_code:gdlcode__Intercept",
"sd_iso_country_code:gdlcode:village__Intercept",
"sigma")
draws <- as_draws_df(location_tva_model)[params]
vpcs <- vpc(location_tva_model,params)
vpcs %>%
gather() %>%
ggplot(aes(y = key, x = value)) +
stat_halfeye(aes(fill = after_stat(level))) +
scale_fill_brewer(na.translate = FALSE) +
labs(y="", x="",title = "")
#get_variables(location_tva_model)[1:10]
params <- c("sd_iso_country_code__Intercept",
"sd_iso_country_code:gdlcode__Intercept",
"sd_iso_country_code:gdlcode:village__Intercept",
"sigma")
# Location Only TVA -------------------------------------------------------
location_tva_model <- loadRData("./outputs/14_04_2023/outputs/overall_models/location_only_tva.rda")
#get_variables(location_tva_model)[1:10]
params <- c("sd_iso_country_code__Intercept",
"sd_iso_country_code:gdlcode__Intercept",
"sd_iso_country_code:gdlcode:village__Intercept",
"sigma")
draws <- as_draws_df(location_tva_model)[params]
vpcs <- vpc(location_tva_model,params)
vpcs %>%
gather() %>%
ggplot(aes(y = key, x = value)) +
stat_halfeye(aes(fill = after_stat(level))) +
scale_fill_brewer(na.translate = FALSE) +
labs(y="", x="",title = "")
# Full TVA -------------------------------------------------------
full_tva_model <- loadRData("./outputs/14_04_2023/outputs/overall_models/horseshoe_tva.rda")
#get_variables(location_tva_model)[1:10]
params <- c("sd_iso_country_code__Intercept",
"sd_iso_country_code:gdlcode__Intercept",
"sd_iso_country_code:gdlcode:village__Intercept",
"sigma")
draws <- as_draws_df(full_tva_model)[params]
vpcs <- vpc(full_tva_model,params)
vpcs %>%
gather() %>%
ggplot(aes(y = key, x = value)) +
stat_halfeye(aes(fill = after_stat(level))) +
scale_fill_brewer(na.translate = FALSE) +
labs(y="", x="",title = "")
full_tva_model
plot(full_tva_model)
params <- grep("b_",get_variables(location_tva_model))
params <- grep("b_",get_variables(location_tva_model), value = T)
params
params <- grep("b_",get_variables(full_tva_model), value = T)
params
draws <- as_draws_df(full_tva_model)[params]
draws %>%
gather() %>%
ggplot(aes(y = key, x = value)) +
stat_halfeye(aes(fill = after_stat(level))) +
scale_fill_brewer(na.translate = FALSE) +
labs(y="", x="",title = "")
params
params <- grep("^b_",get_variables(full_tva_model), value = T)
params
params <- params[params!="b_Intercept"]
draws <- as_draws_df(full_tva_model)[params]
draws %>%
gather() %>%
ggplot(aes(y = key, x = value)) +
stat_halfeye(aes(fill = after_stat(level))) +
scale_fill_brewer(na.translate = FALSE) +
labs(y="", x="",title = "")
