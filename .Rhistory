# }
# sorted_x <- sort(x)
# ranks <- 1:n
# numerator <- sum((2 * ranks - n - 1) * sorted_x)
# denominator <- n * sum(sorted_x)
# if (denominator == 0) {
#   return(0)
# }
# return(1 - (2 * sum(sorted_x[1:(n-1)]) + sorted_x[n]) / denominator)
}
gini(c(1,2,3,4,5,6,7,8))
gini(c(1,1,1,1,1))
gini(c(10))
gini(c(0,10))
gini(c(0,10000))
gini(c(0,1000000000))
x <- sort(x)
x
n <- length(x)
# gini diversity ----------------------------------------------------------
# Feed the future income diversity
# https://sitoolkit.com/the-five-domains/economic/income-diversification/income-diversification-index#:~:text=This%20measure%20is%20unitless%20and,income%20diversified%20the%20household%20is.
x <- c(1,2,3,4,3,2,1,4)
sorted_values <- sort(x)
n <- length(x)
sorted_values*c(1:n)
reverse_gini <- function(x) {
sorted_values <- sort(x)
n <- length(x)
numerator <- 2*sum(sorted_values*c(1:n))
denominator <- n*sum(sorted_values)
constant <- (n+1)/n
g <- (numerator/denominator)-constant
return(1-g)
}
gini(c(1,2,3,4,5,6,7,8))
gini(c(1,1,1,1,1))
gini(c(10))
gini(c(0,10))
gini(c(0,1000000000))
reverse_gini <- function(x) {
sorted_values <- sort(x)
n <- length(x)
numerator <- 2*sum(sorted_values*c(1:n))
denominator <- n*sum(sorted_values)
constant <- (n+1)/n
g <- (numerator/denominator)-constant
return(1-g)
}
reverse_gini(c(1,2,3,4,5,6,7,8))
reverse_gini(c(1,1,1,1,1))
reverse_gini(c(10))
reverse_gini(c(0,10))
reverse_gini(c(0,1000000000))
reverse_gini(c(0,0,1000000000))
reverse_gini(c(0,0,0,1000000000))
# Gini Coefficient reversed
# So 1 is more diverse, and 0 is less diverse
diversity_index <- function(x) {
sorted_values <- sort(x)
n <- length(x)
numerator <- 2*sum(sorted_values*c(1:n))
denominator <- n*sum(sorted_values)
constant <- (n+1)/n
gini_coefficient <- (numerator/denominator)-constant
reverse_gini <- 1-g
weighted_diversity_index <- reverse_gini*n
return()
}
# Gini Coefficient reversed
# So 1 is more diverse, and 0 is less diverse
diversity_index <- function(x) {
sorted_values <- sort(x)
n <- length(x)
numerator <- 2*sum(sorted_values*c(1:n))
denominator <- n*sum(sorted_values)
constant <- (n+1)/n
gini_coefficient <- (numerator/denominator)-constant
reverse_gini <- 1-g
weighted_diversity_index <- reverse_gini*n
return(weighted_diversity_index)
}
diversity_index(c(1,2,3,4,5,6,7,8))
diversity_index(c(1,1,1,1,1))
diversity_index(c(10))
diversity_index(c(0,10))
# Gini Coefficient reversed
# So 1 is more diverse, and 0 is less diverse
diversity_index <- function(x) {
sorted_values <- sort(x)
n <- length(x)
numerator <- 2*sum(sorted_values*c(1:n))
denominator <- n*sum(sorted_values)
constant <- (n+1)/n
gini_coefficient <- (numerator/denominator)-constant
reverse_gini <- 1-gini_coefficient
weighted_diversity_index <- reverse_gini*n
return(weighted_diversity_index)
}
diversity_index(c(1,2,3,4,5,6,7,8))
diversity_index(c(1,1,1,1,1))
diversity_index(c(10))
diversity_index(c(0,10))
diversity_index(c(0,0,0,1000000000))
crop_price_and_value
crop_value
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
plain_crop_diversity <- rowSums(!is.na(crop_price_and_value[[1]]))
diffs <- dist(test_list)
crop_value <- crop_value[[1]]*crop_value[[2]]
crop_value
# Gini Coefficient reversed
# So 1 is more diverse, and 0 is less diverse
diversity_index <- function(x) {
if(all(iis.na(x))){
return(NA)
}
x <- x[!is.na(x)]
sorted_values <- sort(x)
n <- length(x)
numerator <- 2*sum(sorted_values*c(1:n))
denominator <- n*sum(sorted_values)
constant <- (n+1)/n
gini_coefficient <- (numerator/denominator)-constant
reverse_gini <- 1-gini_coefficient
weighted_diversity_index <- reverse_gini*n
return(weighted_diversity_index)
}
crop_value
apply(crop_value,1,diversity_index)
# Gini Coefficient reversed
# So 1 is more diverse, and 0 is less diverse
diversity_index <- function(x) {
if(all(is.na(x))){
return(NA)
}
x <- x[!is.na(x)]
sorted_values <- sort(x)
n <- length(x)
numerator <- 2*sum(sorted_values*c(1:n))
denominator <- n*sum(sorted_values)
constant <- (n+1)/n
gini_coefficient <- (numerator/denominator)-constant
reverse_gini <- 1-gini_coefficient
weighted_diversity_index <- reverse_gini*n
return(weighted_diversity_index)
}
row_wise_diversity <- function(df){
apply(crop_value,1,diversity_index)
}
row_wise_diversity
apply(crop_value,1,diversity_index)
crop_price_and_value
plain_crop_diversity
boxplot(plain_crop_diversity)
weighted_crop_diversity <- apply(crop_value,1,diversity_index)
weighted_crop_diversity
boxplot(weighted_crop_diversity)
indicator_data$livestock_sale_income_1
livestock <- map_to_wide_format(indicator_data,
name_column = "livestock_name",
column_prefixes = c(
"livestock_sale_income",
"meat_kg_per_year",
"mean_meat_price_per_kg_1",
"milk_collected_litres_per_year_1",
"milk_price_per_litre_1",
"eggs_collected_kg_per_year",
"eggs_price_per_kg",
"bees_honey_kg_per_year",
"bees_honey_price_per_kg"),
types=c("num","num"))
livestock <- map_to_wide_format(indicator_data,
name_column = "livestock_name",
column_prefixes = c(
"livestock_sale_income",
"meat_kg_per_year",
"mean_meat_price_per_kg",
"milk_collected_litres_per_year",
"milk_price_per_litre",
"eggs_collected_kg_per_year",
"eggs_price_per_kg",
"bees_honey_kg_per_year",
"bees_honey_price_per_kg"),
types=c("num","num"))
livestock
livestock <- map_to_wide_format(indicator_data,
name_column = "livestock_name",
column_prefixes = c(
"livestock_sale_income",
"meat_kg_per_year",
"mean_meat_price_per_kg",
"milk_collected_litres_per_year",
"milk_price_per_litre",
"eggs_collected_kg_per_year",
"eggs_price_per_kg",
"bees_honey_kg_per_year",
"bees_honey_price_per_kg"),
types=c("num","num","num","num","num","num","num","num","num"))
livestock
livestock_value <- livestock["livestock_sale_income"]
# Gini Coefficient reversed
# So 1 is more diverse, and 0 is less diverse
diversity_index <- function(x) {
if(all(is.na(x))){
return(NA)
}
x <- x[!is.na(x)]
x <- x[x!=0]
if(length(x)==0){
return(NA)
}
sorted_values <- sort(x)
n <- length(x)
numerator <- 2*sum(sorted_values*c(1:n))
denominator <- n*sum(sorted_values)
constant <- (n+1)/n
gini_coefficient <- (numerator/denominator)-constant
reverse_gini <- 1-gini_coefficient
weighted_diversity_index <- reverse_gini*n
return(weighted_diversity_index)
}
livestock_value <- livestock["livestock_sale_income"]
meat_value <- livestock["meat_kg_per_year"]*livestock["mean_meat_price_per_kg"]
milk_value <- livestock["milk_collected_litres_per_year"]*livestock["milk_price_per_litre"]
livestock_value <- livestock[["livestock_sale_income"]]
meat_value <- livestock[["meat_kg_per_year"]]*livestock[["mean_meat_price_per_kg"]]
milk_value <- livestock[["milk_collected_litres_per_year"]]*livestock[["milk_price_per_litre"]]
eggs_value <- livestock[["eggs_collected_kg_per_year"]]*livestock[["eggs_price_per_kg"]]
honey_value <- livestock[["bees_honey_kg_per_year"]]*livestock[["bees_honey_price_per_kg"]]
honey_value
value_matrix <- bind_cols(crop_value,
livestock_value,
meat_value,
milk_value,
eggs_value,
honey_value)
value_matrix
weighted_crop_diversity <- apply(value_matrix,1,diversity_index)
boxplot(weighted_crop_diversity)
weighted_crop_diversity <- apply(value_matrix,1,diversity_index)
weighted_crop_diversity
boxplot(weighted_crop_diversity)
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("crop_harvest_kg_per_year"),
types=c("chr"))
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))
off_farm_income
off_farm_income[!is.na(off_farm_income)] <- 1
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[[1]]
off_farm_income[!is.na(off_farm_income)] <- 1
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[[1]]
map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[["offfarm_income_name"]]
off_farm_income
off_farm_income[!is.na(off_farm_income)] <- 1
off_farm_income[!is.na(off_farm_income)] <- "1"
off_farm_income <- off_farm_income %>% mutate_all(as.numeric)
off_farm_income
off_farm_value <- off_farm_income*indicator_data$off_farm_income_lcu_per_year
off_farm_value
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[["offfarm_income_name"]]
off_farm_income[!is.na(off_farm_income)] <- "1"
off_farm_income <- off_farm_income %>% mutate_all(as.numeric)
off_farm_income <- off_farm_income/rowSums(off_farm_income,na.rm=T)
off_farm_income
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[["offfarm_income_name"]]
off_farm_income[!is.na(off_farm_income)] <- "1"
off_farm_income <- off_farm_income %>% mutate_all(as.numeric)
rowSums(off_farm_income,na.rm=T)
off_farm_income <- off_farm_income/rowSums(off_farm_income,na.rm=T)
off_farm_income
hist(off_farm_income$ownbusiness)
off_farm_value <- off_farm_income*indicator_data$off_farm_income_lcu_per_year
diversity <- function(indicator_data){
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
# plain_crop_diversity <- rowSums(!is.na(crop_price_and_value[[1]]))
crop_value <- crop_value[[1]]*crop_value[[2]]
livestock <- map_to_wide_format(indicator_data,
name_column = "livestock_name",
column_prefixes = c(
"livestock_sale_income",
"meat_kg_per_year",
"mean_meat_price_per_kg",
"milk_collected_litres_per_year",
"milk_price_per_litre",
"eggs_collected_kg_per_year",
"eggs_price_per_kg",
"bees_honey_kg_per_year",
"bees_honey_price_per_kg"),
types=c("num","num","num","num","num","num","num","num","num"))
# plain_crop_diversity <- rowSums(!is.na(crop_price_and_value[[1]]))
livestock_value <- livestock[["livestock_sale_income"]]
meat_value <- livestock[["meat_kg_per_year"]]*livestock[["mean_meat_price_per_kg"]]
milk_value <- livestock[["milk_collected_litres_per_year"]]*livestock[["milk_price_per_litre"]]
eggs_value <- livestock[["eggs_collected_kg_per_year"]]*livestock[["eggs_price_per_kg"]]
honey_value <- livestock[["bees_honey_kg_per_year"]]*livestock[["bees_honey_price_per_kg"]]
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[["offfarm_income_name"]]
off_farm_income[!is.na(off_farm_income)] <- "1"
off_farm_income <- off_farm_income %>% mutate_all(as.numeric)
off_farm_income <- off_farm_income/rowSums(off_farm_income,na.rm=T)
off_farm_value <- off_farm_income*indicator_data$off_farm_income_lcu_per_year
value_matrix <- bind_cols(crop_value,
livestock_value,
meat_value,
milk_value,
eggs_value,
honey_value,
off_farm_value)
weighted_income_diversity <- apply(value_matrix,1,diversity_index)
return(weighted_income_diversity)
}
indicator_data$weighted_income_diversity <- diversity(indicator_data)
indicator_data$weighted_income_diversity
table(is.na(indicator_data$weighted_income_diversity))
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
crop_value <- crop_value[[1]]*crop_value[[2]]
livestock <- map_to_wide_format(indicator_data,
name_column = "livestock_name",
column_prefixes = c(
"livestock_sale_income",
"meat_kg_per_year",
"mean_meat_price_per_kg",
"milk_collected_litres_per_year",
"milk_price_per_litre",
"eggs_collected_kg_per_year",
"eggs_price_per_kg",
"bees_honey_kg_per_year",
"bees_honey_price_per_kg"),
types=c("num","num","num","num","num","num","num","num","num"))
livestock_value <- livestock[["livestock_sale_income"]]
meat_value <- livestock[["meat_kg_per_year"]]*livestock[["mean_meat_price_per_kg"]]
milk_value <- livestock[["milk_collected_litres_per_year"]]*livestock[["milk_price_per_litre"]]
eggs_value <- livestock[["eggs_collected_kg_per_year"]]*livestock[["eggs_price_per_kg"]]
honey_value <- livestock[["bees_honey_kg_per_year"]]*livestock[["bees_honey_price_per_kg"]]
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[["offfarm_income_name"]]
off_farm_income[!is.na(off_farm_income)] <- "1"
off_farm_income <- off_farm_income %>% mutate_all(as.numeric)
off_farm_income <- off_farm_income/rowSums(off_farm_income,na.rm=T)
off_farm_value <- off_farm_income*indicator_data$off_farm_income_lcu_per_year
off_farm_value
value_matrix <- bind_cols(crop_value,
livestock_value,
meat_value,
milk_value,
eggs_value,
honey_value,
off_farm_value)
colnames(value_matrix)
crop_value
crop_value
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
crop_value[[1]]
crop_price_and_value
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
crop_value <- crop_value[["crop_harvest_kg_per_year"]]*crop_value[["mean_crop_price_lcu_per_kg"]]
livestock <- map_to_wide_format(indicator_data,
name_column = "livestock_name",
column_prefixes = c(
"livestock_sale_income",
"meat_kg_per_year",
"mean_meat_price_per_kg",
"milk_collected_litres_per_year",
"milk_price_per_litre",
"eggs_collected_kg_per_year",
"eggs_price_per_kg",
"bees_honey_kg_per_year",
"bees_honey_price_per_kg"),
types=c("num","num","num","num","num","num","num","num","num"))
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
crop_value <- crop_value[["crop_harvest_kg_per_year"]]*crop_value[["mean_crop_price_lcu_per_kg"]]
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
crop_value <- crop_price_and_value[["crop_harvest_kg_per_year"]]*crop_price_and_value[["mean_crop_price_lcu_per_kg"]]
livestock <- map_to_wide_format(indicator_data,
name_column = "livestock_name",
column_prefixes = c(
"livestock_sale_income",
"meat_kg_per_year",
"mean_meat_price_per_kg",
"milk_collected_litres_per_year",
"milk_price_per_litre",
"eggs_collected_kg_per_year",
"eggs_price_per_kg",
"bees_honey_kg_per_year",
"bees_honey_price_per_kg"),
types=c("num","num","num","num","num","num","num","num","num"))
livestock_value <- livestock[["livestock_sale_income"]]
meat_value <- livestock[["meat_kg_per_year"]]*livestock[["mean_meat_price_per_kg"]]
milk_value <- livestock[["milk_collected_litres_per_year"]]*livestock[["milk_price_per_litre"]]
eggs_value <- livestock[["eggs_collected_kg_per_year"]]*livestock[["eggs_price_per_kg"]]
honey_value <- livestock[["bees_honey_kg_per_year"]]*livestock[["bees_honey_price_per_kg"]]
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[["offfarm_income_name"]]
off_farm_income[!is.na(off_farm_income)] <- "1"
off_farm_income <- off_farm_income %>% mutate_all(as.numeric)
off_farm_income <- off_farm_income/rowSums(off_farm_income,na.rm=T)
off_farm_value <- off_farm_income*indicator_data$off_farm_income_lcu_per_year
crop_value
value_matrix <- bind_cols(crop_value,
livestock_value,
meat_value,
milk_value,
eggs_value,
honey_value,
off_farm_value)
diversity <- function(indicator_data){
crop_price_and_value <- map_to_wide_format(indicator_data,
name_column = "crop_name",
column_prefixes = c("crop_harvest_kg_per_year","mean_crop_price_lcu_per_kg"),
types=c("num","num"))
# plain_crop_diversity <- rowSums(!is.na(crop_price_and_value[[1]]))
crop_value <- crop_price_and_value[["crop_harvest_kg_per_year"]]*crop_price_and_value[["mean_crop_price_lcu_per_kg"]]
livestock <- map_to_wide_format(indicator_data,
name_column = "livestock_name",
column_prefixes = c(
"livestock_sale_income",
"meat_kg_per_year",
"mean_meat_price_per_kg",
"milk_collected_litres_per_year",
"milk_price_per_litre",
"eggs_collected_kg_per_year",
"eggs_price_per_kg",
"bees_honey_kg_per_year",
"bees_honey_price_per_kg"),
types=c("num","num","num","num","num","num","num","num","num"))
# plain_crop_diversity <- rowSums(!is.na(crop_price_and_value[[1]]))
livestock_value <- livestock[["livestock_sale_income"]]
meat_value <- livestock[["meat_kg_per_year"]]*livestock[["mean_meat_price_per_kg"]]
milk_value <- livestock[["milk_collected_litres_per_year"]]*livestock[["milk_price_per_litre"]]
eggs_value <- livestock[["eggs_collected_kg_per_year"]]*livestock[["eggs_price_per_kg"]]
honey_value <- livestock[["bees_honey_kg_per_year"]]*livestock[["bees_honey_price_per_kg"]]
off_farm_income <- map_to_wide_format(indicator_data,
name_column = "offfarm_income_name",
column_prefixes = c("offfarm_income_name"),
types=c("chr"))[["offfarm_income_name"]]
off_farm_income[!is.na(off_farm_income)] <- "1"
off_farm_income <- off_farm_income %>% mutate_all(as.numeric)
off_farm_income <- off_farm_income/rowSums(off_farm_income,na.rm=T)
off_farm_value <- off_farm_income*indicator_data$off_farm_income_lcu_per_year
value_matrix <- bind_cols(crop_value,
livestock_value,
meat_value,
milk_value,
eggs_value,
honey_value,
off_farm_value)
weighted_income_diversity <- apply(value_matrix,1,diversity_index)
return(weighted_income_diversity)
}
indicator_data$weighted_income_diversity <- diversity(indicator_data)
indicator_data$weighted_income_diversity
table(is.na(indicator_data$weighted_income_diversity ))
hist(indicator_data$weighted_income_diversity )
