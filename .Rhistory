Q.01=rep(NA,length(criteria)-1),
Q.05=rep(NA,length(criteria)-1),
Q.95=rep(NA,length(criteria)-1),
Q.99=rep(NA,length(criteria)-1)
)%>% as_tibble()
summary <- bind_rows(summary,summary_addition)
}
exclusion_list <- list()
for (i in 1:length(criteria)){
temp_function <- criteria[[i]]
result <- temp_function(df[[variable]])
number_of_values <- table(result)["TRUE"]
if (is.na(number_of_values)){
number_of_values <- 0
}
exclusion_list[[i]] <-list(
Criteria=criteria_description[[i]],
Action=actions[[i]],
Justification=justification[[i]],
Count=as.numeric(number_of_values)
)
}
exclusion_list <- bind_rows(exclusion_list)
summary <- bind_cols(summary,exclusion_list)
return(summary)
}
hh_size_summary <-variable_summary(
df=modelling_data_set,
variable="hh_size_mae",
description="Number of Household Members in MAE",
level="Household Level",
criteria=list(
function(x){is.na(x)},
function(x){x==0},
function(x){x>30}),
criteria_description=c("Null Value", "Zero Value","Above 30 MAE"),
actions=c("Exclude", "Exclude", "Exclude"),
justification=c(
"Houeshold must have a size to be considered a household",
"Household cannot be considered if it has no members",
"Less than 1% of households above this amount. Likely that household of this size due to error"
)
)
tlu_summary <-variable_summary(
df=modelling_data_set,
variable="livestock_tlu",
description="",
level="Household Level",
criteria=list(
function(x){is.na(x)},
function(x){x>100}),
criteria_description=c("Null Value", "Below 100 TLU"),
actions=c("NAs will be converted to 0","Excluded"),
justification=c(
"",
"Less than 1% of households above this amount. Likely that household of this size due to error"
)
)
tva_summary <-variable_summary(
df=modelling_data_set,
variable="tva_per_mae_per_day_ppp",
description="",
level="Household Level",
criteria=list(
function(x){is.na(x)},
function(x){x==0},
function(x){x>10000}),
criteria_description=c("Null Value", "Zero Value","Reported than 10,000 (PPP$/MAE/Day)"),
actions=c("Excluded","Excluded","Excluded"),
justification=c(
"Value a key performance indicator",
"Household has to have at least some farm produce",
"Less than 1% of households above this amount. Likely that farming household not earning this much per person per day"
)
)
growing_period_summary <-variable_summary(
df=modelling_data_set,
variable="adjusted_length_growing_period",
description="",
level="Village Level",
criteria=list(
function(x){is.na(x)},
function(x){x>365}),
criteria_description=c("Null Value", "Growing period of more than 365 days"),
actions=c("Exclude", "Exclude"),
justification=c(
"Cannot have no growing period",
"Cannot have growing period of more than 365 days"
)
)
travel_time_summary <-variable_summary(
df=modelling_data_set,
variable="min_travel_time",
description="",
level="Village Level",
criteria=list(
function(x){is.na(x)},
function(x){x>2880}),
criteria_description=c("Null Value", "Travel time more than 48 hours"),
actions=c("Exclude","Exclude"),
justification=c(
"NAs will removed",
"Unlikely more than 48 hours travel time to closest town"
)
)
hdi_summary <-variable_summary(
df=modelling_data_set,
variable="gdl_shdi",
description="",
level="Village Level",
criteria=list(
function(x){is.na(x)},
function(x){x>1}),
criteria_description=c("Null Value", "More than 1"),
actions=c("Exclude", "Exclude"),
justification=c(
"Only 1 household",
"Proportional measure, cannot be greater than 1"
)
)
exclusion_summary <- bind_rows(
hh_size_summary,
tlu_summary,
tva_summary,
growing_period_summary,
travel_time_summary,
hdi_summary
)
readr::write_csv(exclusion_summary,"./outputs/02-data-exploration/numeric_variable_exclusion_summary.csv")
above_row_selectors <- which(!is.na(exclusion_summary$Variable))-1
above_row_selectors <- above_row_selectors[above_row_selectors!=0]
# bold_row_selectors <- which(!is.na(cleaned_aggregation$`Cleaned Value`))
cleaned_aggregation <- exclusion_summary %>% flextable::flextable() %>%
bold( bold = TRUE, part="header") %>%
hline(i = above_row_selectors)  %>%
bold(j = c("Variable", "Count"))
save_as_image(cleaned_aggregation, "./outputs/02-data-exploration/numeric_variable_exclusion_summary.png")
#-------------------------------------------------------------------------
# variable_summary -------------------------------------------------------
#-------------------------------------------------------------------------
variable_summary <- tribble(
~Category,~Variable, ~`Data Type`, ~Level, ~Description,~`Reason for Inclusion`,
"Grouping Variables","id_form","categorical","Household-Level","","",
"Grouping Variables","gdlcode","categorical","Household-Level","","",
"Grouping Variables","iso_country_code","categorical","Household-Level","","",
"Grouping Variables","village","categorical","Household-Level","","",
"Demographics","hh_size_mae","continuous","Household-Level","","",
"Demographics","education_cleaned","continuous","Household-Level","","",
"Resource Endowment","livestock_tlu","continuous","Household-Level","","", # centered transform
"Resource Endowment","land_cultivated_ha","continuous","Household-Level","","",
"Off Farm", "off_farm_any", "binary","Household-Level","","",
# "Production Orientation","livestock_orientation","proportion","Household-Level","","", #logit transform
# "Production Orientation","crop_orientation","proportion","Household-Level","","", #logit transform
# "Production Orientation","off_farm_orientation","proportion","Household-Level","","", #logit transform
# "Production Orientation","market_orientation","proportion","Household-Level","","", # logit transform
# "Production Orientation","weighted_income_diversity","continuous","Household-Level","","", # centred transform
# "Gender","proportion_female_control","proportion","Household-Level","","", # centred transform
# Village Level Variables
"Village Variables","adjusted_length_growing_period","continuous","Village Level","","", # centered transform
"Village Variables","min_travel_time","continuous","Village Level","","", # centered transform
"Village Variables","kg_class_name","categorical","Village Level","","",
"Village Variables","population_density","numeric","Village Level","","",
# County Level Variables
"County Descriptors","gdl_shdi","proportion","County","","",
# Country Level Variables
"Country Descriptors","gdl_country_shdi","proportion","Country","","",
"Performance Indicators","tva_per_mae_per_day_ppp","continuous","Household Level","","", # centered transform
"Performance Indicators","hdds","ordinal","Household Level","","",
)
readr::write_csv(variable_summary,"./outputs/02-data-exploration/variable_summary.csv")
# Transformation ----------------------------------------------------------
ihs <- function(x) {
y <- log(x + sqrt(x^2 + 1))
return(y)
}
log_add_half_min <- function(x){
replacement <- min(x[x>0 & !is.na(x)])/2
x[x==0] <- replacement
return(log(x))
}
logit <- function(x){
min_replacement <- min(x[x>0.000001 & x<0.999999 & !is.na(x)])/2
max_replacement <- (1-max(x[x>0.000001 & x<0.999999 & !is.na(x)]))/2
x[x<0.001] <- min_replacement
x[x>0.999] <- 1-max_replacement
return(log(x/(1 - x)))
}
normalisation <- function(x){
return((x - mean(x)) / sd(x))
}
modelling_data_set$livestock_tlu[ is.na(modelling_data_set$livestock_tlu)] <- 0
modelling_data_set <- modelling_data_set[modelling_data_set$hh_size_mae>0 & !is.na(modelling_data_set$hh_size_mae),]
modelling_data_set <- modelling_data_set[modelling_data_set$tva_per_mae_per_day_ppp>0 & !is.na(modelling_data_set$tva_per_mae_per_day_ppp),]
modelling_data_set$id_form[(modelling_data_set$gdl_shdi)]
colSums(is.na(modelling_data_set))
modelling_data_set <- modelling_data_set[complete.cases(modelling_data_set),]
nrow(modelling_data_set)
modelling_data_set <- modelling_data_set[
modelling_data_set$hh_size_mae<30&
modelling_data_set$livestock_tlu<100&
modelling_data_set$tva_per_mae_per_day_ppp<10000&
modelling_data_set$min_travel_time<2880
,]
nrow(modelling_data_set)
modelling_data_set$log_hh_size <- log_add_half_min(modelling_data_set$hh_size_mae)
modelling_data_set$log_hh_size <- normalisation(modelling_data_set$log_hh_size)
hist(modelling_data_set$log_hh_size)
# Livestock TLU (Log)
modelling_data_set$log_livestock_tlu <- log_add_half_min(modelling_data_set$livestock_tlu)
modelling_data_set$log_livestock_tlu <- normalisation(modelling_data_set$log_livestock_tlu)
hist(modelling_data_set$log_livestock_tlu)
# Land Cultivated (Log)
modelling_data_set$log_land_cultivated <- log_add_half_min(modelling_data_set$land_cultivated_ha)
modelling_data_set$log_land_cultivated <- normalisation(modelling_data_set$log_land_cultivated)
hist(modelling_data_set$log_land_cultivated )
# Market Orientation (Logit)
modelling_data_set$logit_market_orientation <- logit(modelling_data_set$market_orientation)
modelling_data_set$logit_market_orientation <- normalisation(modelling_data_set$logit_market_orientation)
hist(modelling_data_set$logit_market_orientation)
# Transformation ----------------------------------------------------------
ihs <- function(x) {
y <- log(x + sqrt(x^2 + 1))
return(y)
}
as_sqrt <- function(x){
y <- asin(sqrt(x))
return(y)
}
# Transformation ----------------------------------------------------------
ihs <- function(x) {
y <- log(x + sqrt(x^2 + 1))
return(y)
}
as_sqrt(modelling_data_set$market_orientation)
table(modelling_data_set$market_orientation>0)
table(modelling_data_set$market_orientation>=0)
temp <- as_sqrt(modelling_data_set$market_orientation)
hist(temp)
temp <- ihs(modelling_data_set$land_cultivated_ha)
temp <- ihs(modelling_data_set$land_cultivated_ha)
hist(temp)
temp <- log_add_half_min(modelling_data_set$land_cultivated_ha)
hist(temp)
temp <- ihs(modelling_data_set$land_cultivated_ha)
hist(temp)
# Transformation ----------------------------------------------------------
ihs <- function(x) {
y <- asinh(x)
return(y)
}
temp <- ihs(modelling_data_set$land_cultivated_ha)
hist(temp)
temp <- ihs(modelling_data_set$land_cultivated_ha)
hist(temp)
temp <- log_add_half_min(modelling_data_set$land_cultivated_ha)
hist(temp)
temp <- ihs(modelling_data_set$land_cultivated_ha)
hist(temp)
# Transformation ----------------------------------------------------------
ihs <- function(x) {
y <- log(x + sqrt(x^2 + 1))
return(y)
}
temp <- ihs(modelling_data_set$land_cultivated_ha)
hist(temp)
hist(modelling_data_set$land_cultivated_ha)
temp <- ihs(modelling_data_set$land_cultivated_ha)
hist(temp)
temp <- log_add_half_min(modelling_data_set$land_cultivated_ha)
hist(temp)
colnames(modelling_data_set)
final_modelling_df <- modelling_data_set[c("id_form",
"id_unique",
"iso_country_code",
"kg_class_name",
"gdlcode",
"village",
"external_labour",
"assisted_tillage",
"debts_have",
"livestock_inputs_any",
"land_irrigated_any",
"use_fert",
"homegarden",
"off_farm_any"
)]
final_modelling_df$education <-modelling_data_set$education_cleaned
ihs(modelling_data_set$hh_size_mae)
hist(ihs(modelling_data_set$hh_size_mae))
# HHsize Standardisation (Log)
final_modelling_df$hh_size <- ihs(modelling_data_set$hh_size_mae)
final_modelling_df$hh_size <- normalisation(final_modelling_df$hh_size)
hist(final_modelling_df$hh_size)
# Livestock TLU (Log)
final_modelling_df$livestock_tlu <- ihs(modelling_data_set$livestock_tlu)
final_modelling_df$livestock_tlu <- normalisation(final_modelling_df$livestock_tlu)
hist(final_modelling_df$livestock_tlu )
ihs(modelling_data_set$livestock_tlu)
hist(ihs(modelling_data_set$livestock_tlu))
hist(log(modelling_data_set$livestock_tlu))
ihs(modelling_data_set$livestock_tlu)
hist(ihs(modelling_data_set$livestock_tlu))
# Livestock TLU (Log)
final_modelling_df$livestock_tlu <- ihs(modelling_data_set$livestock_tlu)
final_modelling_df$livestock_tlu <- normalisation(final_modelling_df$livestock_tlu)
hist(final_modelling_df$livestock_tlu )
# Land Cultivated (Log)
final_modelling_df$land_cultivated <- ihs(modelling_data_set$land_cultivated_ha)
final_modelling_df$land_cultivated <- normalisation(final_modelling_df$land_cultivated)
hist(final_modelling_df$land_cultivated)
# Market Orientation (Logit)
final_modelling_df$market_orientation <- as_sqrt(modelling_data_set$market_orientation)
hist(final_modelling_df$market_orientation)
final_modelling_df$market_orientation <- normalisation(final_modelling_df$market_orientation)
final_modelling_df$market_orientation
# Market Orientation (Logit)
final_modelling_df$market_orientation <- as_sqrt(modelling_data_set$market_orientation)
final_modelling_df$market_orientation <- normalisation(final_modelling_df$market_orientation)
hist(final_modelling_df$market_orientation )
final_modelling_df$market_orientation
final_modelling_df[complete.cases(final_modelling_df),]
final_modelling_df$market_orientation <- normalisation(final_modelling_df$market_orientation)
final_modelling_df$market_orientation
# Market Orientation (Logit)
final_modelling_df$market_orientation <- as_sqrt(modelling_data_set$market_orientation)
final_modelling_df[complete.cases(final_modelling_df),]
final_modelling_df$market_orientation <- normalisation(final_modelling_df$market_orientation)
final_modelling_df$market_orientation
# Market Orientation (Logit)
final_modelling_df$market_orientation <- as_sqrt(modelling_data_set$market_orientation)
final_modelling_df <- final_modelling_df[complete.cases(final_modelling_df),]
final_modelling_df$market_orientation <- normalisation(final_modelling_df$market_orientation)
final_modelling_df$market_orientation
hist(final_modelling_df$market_orientation)
hist( ihs(modelling_data_set$tva_per_mae_per_day_ppp))
final_modelling_df <- modelling_data_set[c("id_form",
"id_unique",
"iso_country_code",
"kg_class_name",
"gdlcode",
"village",
"external_labour",
"assisted_tillage",
"debts_have",
"livestock_inputs_any",
"land_irrigated_any",
"use_fert",
"homegarden",
"off_farm_any"
)]
final_modelling_df$education <-modelling_data_set$education_cleaned
# HHsize Standardisation (Log)
final_modelling_df$hh_size <- log_add_half_min(modelling_data_set$hh_size_mae)
final_modelling_df$hh_size <- normalisation(final_modelling_df$hh_size)
# Livestock TLU (Log)
final_modelling_df$livestock_tlu <- log_add_half_min(modelling_data_set$livestock_tlu)
final_modelling_df$livestock_tlu <- normalisation(final_modelling_df$livestock_tlu)
# Land Cultivated (Log)
final_modelling_df$land_cultivated <- log_add_half_min(modelling_data_set$land_cultivated_ha)
final_modelling_df$land_cultivated <- normalisation(final_modelling_df$land_cultivated)
hist(final_modelling_df$land_cultivated)
# Market Orientation (Logit)
final_modelling_df$market_orientation <- as_sqrt(modelling_data_set$market_orientation)
final_modelling_df <- final_modelling_df[complete.cases(final_modelling_df),]
final_modelling_df$market_orientation <- normalisation(final_modelling_df$market_orientation)
# TVA (Log)
modelling_data_set$log_tva <- log_add_half_min(modelling_data_set$tva_per_mae_per_day_ppp)
modelling_data_set$log_tva <- normalisation(modelling_data_set$log_tva)
# TVA (Log)
final_modelling_df$tva <- log_add_half_min(modelling_data_set$tva_per_mae_per_day_ppp)
modelling_data_set <- modelling_data_set[modelling_data_set$market_orientation>=0,]
modelling_data_set
modelling_data_set <- modelling_data_set[
modelling_data_set$hh_size_mae<30&
modelling_data_set$livestock_tlu<100&
modelling_data_set$tva_per_mae_per_day_ppp<10000&
modelling_data_set$min_travel_time<2880
,]
final_modelling_df <- modelling_data_set[c("id_form",
"id_unique",
"iso_country_code",
"kg_class_name",
"gdlcode",
"village",
"external_labour",
"assisted_tillage",
"debts_have",
"livestock_inputs_any",
"land_irrigated_any",
"use_fert",
"homegarden",
"off_farm_any"
)]
final_modelling_df$education <-modelling_data_set$education_cleaned
# HHsize Standardisation (Log)
final_modelling_df$hh_size <- log_add_half_min(modelling_data_set$hh_size_mae)
final_modelling_df$hh_size <- normalisation(final_modelling_df$hh_size)
# Livestock TLU (Log)
final_modelling_df$livestock_tlu <- log_add_half_min(modelling_data_set$livestock_tlu)
final_modelling_df$livestock_tlu <- normalisation(final_modelling_df$livestock_tlu)
# Land Cultivated (Log)
final_modelling_df$land_cultivated <- log_add_half_min(modelling_data_set$land_cultivated_ha)
final_modelling_df$land_cultivated <- normalisation(final_modelling_df$land_cultivated)
# Market Orientation (Logit)
final_modelling_df$market_orientation <- as_sqrt(modelling_data_set$market_orientation)
final_modelling_df$market_orientation <- normalisation(final_modelling_df$market_orientation)
# TVA (Log)
final_modelling_df$tva <- log_add_half_min(modelling_data_set$tva_per_mae_per_day_ppp)
modelling_data_set$tva <- normalisation(modelling_data_set$tva)
modelling_data_set$tva <- normalisation(final_modelling_df$tva)
final_modelling_df$tva <- normalisation(final_modelling_df$tva)
modelling_data_set$hdds <- normalisation(modelling_data_set$hdds_lean_season)
# Length Growing Period (Norm)
modelling_data_set$norm_growing_period <- normalisation(modelling_data_set$adjusted_length_growing_period)
source("~/research/phd/chapter-6-analysis/src/02-data-exploration/04-aggregating-categories.R")
hist(normalisation(modelling_data_set$gdl_country_shdi))
hist(modelling_data_set$gdl_country_shdi)
hist(log(modelling_data_set$gdl_country_shdi))
final_modelling_df$gdl_country_shdi <- log_add_half_min(modelling_data_set$gdl_country_shdi)
final_modelling_df$gdl_country_shdi <- normalisation(final_modelling_df$gdl_country_shdi)
# Number Income Source
final_modelling_df$number_income_sources <- log_add_half_min(modelling_data_set$number_income_sources)
final_modelling_df$number_income_sources <- normalisation(final_modelling_df$number_income_sources)
hist(final_modelling_df$number_income_sources)
source("~/research/phd/chapter-6-analysis/src/02-data-exploration/04-aggregating-categories.R")
source("~/research/phd/chapter-6-analysis/src/02-data-exploration/04-aggregating-categories.R")
pair_plot <- modelling_data_set %>%
select_if( is.numeric) %>%
mutate_all(as.numeric)
pair_plot
auxilliary_variables <- c(
"hh_size",
"education",
#Assets
"livestock_tlu",
"land_cultivated",
"market_orientation",
"debts_have",
"off_farm_any",
"homegarden",
"number_income_sources",
"market_orientation",
# Practices
"assisted_tillage",
"external_labour",
"livestock_inputs_any",
"land_irrigated_any",
"use_fert",
# Village level
"length_growing_period",
"min_travel_time",
"gdl_country_shdi")
auxilliary_variables
# Adapted from Frank Weber's Solution
# https://github.com/stan-dev/projpred/issues/346
get_search_terms <- function(fixed_terms, other_predictors, max_terms) {
if (max_terms > length(other_predictors)){
stop("Cannot have max terms more than predictors")
}
search_terms <- unlist(lapply(1:max_terms, function(m_predictors) {
lapply(combn(other_predictors, m = m_predictors, simplify = FALSE),
function(idxs_predictors) {
paste0(idxs_predictors, collapse = " + ")
})
}))
search_terms <- c(fixed_terms, paste(fixed_terms, "+", search_terms))
return(search_terms)
}
auxilliary_variables <- c(
"hh_size",
"education",
#Assets
"livestock_tlu",
"land_cultivated",
"market_orientation",
"debts_have",
"off_farm_any",
"homegarden",
"number_income_sources",
"market_orientation",
# Practices
"assisted_tillage",
"external_labour",
"livestock_inputs_any",
"land_irrigated_any",
"use_fert",
# Village level
"length_growing_period",
"min_travel_time",
"gdl_country_shdi")
group_effects <-"(1 | iso_country_code) + (1 | iso_country_code:village)"
max_vars <- 12
# Basing this off of discussion on stan forum:
# https://discourse.mc-stan.org/t/projpred-fixing-group-effects-in-search-terms-and-tips-for-speed/31678/4
search_terms <- get_search_terms(group_effects,auxilliary_variables, max_terms=max_vars)
search_terms
length(search_terms)
max_vars <- length(auxilliary_variables)
max_vars
source("~/research/phd/chapter-6-analysis/src/04-interpretation/03-variable-addition.R")
temp <- loadRData("./outputs/31_05_2023/outputs/overall_models/variable_addition/tva/weak_prior_fixed.rda")
temp
source("~/research/phd/chapter-6-analysis/src/04-interpretation/03-variable-addition.R")
model_files
model_file
hdds_model <- loadRData(hdds_path)
hdds_path <- paste0("outputs/31_05_2023/outputs/overall_models/variable_addition/hdds/",model_file)
hdds_path
source("~/research/phd/chapter-6-analysis/src/04-interpretation/03-variable-addition.R")
source("~/research/phd/chapter-6-analysis/src/04-interpretation/03-variable-addition.R")
hdds_path
hdds_model <- loadRData(hdds_path)
