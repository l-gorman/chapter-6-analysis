model$ranef
model$autocor
model$formula
model$data2
model$model
all_vars <-get_variables(model)
all_vars
group_effects <- grep("^sd",all_vars)
group_effects <- grep("^sd",all_vars, value=T)
group_effects
draws <- as_draws_df(model,variables =c(level_1,level_2) )
draws
draws
?as_draws_df
model
draws <- as_draws_df(model,variable =c(level_1,level_2) )
level_1
level_1 <- "r_iso_country_code"
level_2 <- "r_iso_country_code:gdlcode"
draws <- as_draws_df(model,variable =c(level_1,level_2) )
draws
colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")]
vars <- colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")==F]
vars
level_1 <- gsub(".*\\[","",vars)
level_1 <- "r_iso_country_code"
level_2 <- "r_iso_country_code:gdlcode"
draws <- as_draws_df(model,variable =c(level_1,level_2) )
vars <- colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")==F]
level_1_vars <- gsub(".*\\[","",vars)
level_1_vars
level_1_vars <- gsub(".*\\[","",vars[grep(level_1)])
level_1_vars <- gsub(".*\\[","",vars[grep(level_1,vars)])
level_1_vars
level_1
vars
vars
grep(level_1,vars)
vars
level_1_vars <- gsub(".*\\[","",vars[grep(paste0("^",level_1),vars)])
level_1_vars
paste0("^",level_1)
level_1_vars <- gsub(".*\\[","",vars[grep(paste0("^",level_1,"\\["),vars)])
level_1_vars
level_1_vars <- vars[grep(paste0("^",level_1,"\\["),vars)]
level_1_vars
level_2_vars <- vars[grep(paste0("^",level2,"\\["),vars)]
level_2_vars <- vars[grep(paste0("^",level_2,"\\["),vars)]
level_2_vars
level_1_level <- gsub(".*\\[","",level_1_vars)
level_1_level
level_1_level <- gsub(",.*","",level_1_level)
level_1_level
level_2_vars
level_1_level
level_1_levels <- gsub(".*\\[","",level_1_vars)
level_1_levels <- gsub(",.*","",level_1_levels)
level_1_levels
upper_level <- level_1_levels[1]
upper_level
upper_level
level_2_vars
level_2 <- "r_iso_country_code:gdlcode:village"
draws <- as_draws_df(model,variable =c(level_1,level_2) )
draws
vars <- colnames(draws)
vars
upper_level
level_1_vars
upper_level_whole <- level_1_vars[1]
plot_random_cors <- mcmc_pairs(model,pars = c(upper_level_whole,relevant_level_2_levels))
relevant_level_2_levels <- grep(paste0(upper_level,"_",level_2_vars))
upper_level
relevant_level_2_levels <- grep(paste0(upper_level,"_"),level_2_vars)
plot_random_cors <- mcmc_pairs(model,pars = c(upper_level_whole,relevant_level_2_levels))
relevant_level_2_levels
relevant_level_2_levels <- level_2_vars[grep(paste0(upper_level,"_"),level_2_vars)]
relevant_level_2_levels
plot_random_cors <- mcmc_pairs(model,pars = c(upper_level_whole,relevant_level_2_levels))
plot_random_cors
plot_random_cors
plot_random_cors
relevant_level_2_levels
upper_level_whole
level_1_levels
level_1_vars
upper_level <- level_1_levels[1]
upper_level_whole <- level_1_vars[1]
upper_level
relevant_level_2_levels
data_to_plot <- draws[c(level_1_vars,level_1_vars)]
data_to_plot
data_to_plot <- draws[c(level_1_vars,level_2_vars)]
level_2_vars
relevant_level_2_levels
data_to_plot <- draws[c(level_1_vars,relevant_level_2_levels)]
level_1_vars
relevant_level_2_levels
data_to_plot <- draws[c(level_1_vars,relevant_level_2_levels)]
level_2 <- "r_iso_country_code:gdlcode"
level_1 <- "r_iso_country_code"
level_2 <- "r_iso_country_code:gdlcode"
draws <- as_draws_df(model,variable =c(level_1,level_2) )
vars <- colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")==F]
level_1_vars <- vars[grep(paste0("^",level_1,"\\["),vars)]
level_1_levels <- gsub(".*\\[","",level_1_vars)
level_1_levels <- gsub(",.*","",level_1_levels)
level_2_vars <- vars[grep(paste0("^",level_2,"\\["),vars)]
upper_level <- level_1_levels[1]
upper_level_whole <- level_1_vars[1]
relevant_level_2_levels <- level_2_vars[grep(paste0(upper_level,"_"),level_2_vars)]
data_to_plot <- draws[c(level_1_vars,relevant_level_2_levels)]
data_to_plot
data_to_plot %>% pivot_longer(cols=relevant_level_2_levels)
data_to_plot %>% pivot_longer(cols=all_of(relevant_level_2_levels))
data_to_plot
library(tidyr)
?melt
library(reshape2)
level_1_vars
data_to_plot <- draws[c(upper_level_whole,relevant_level_2_levels)]
data_to_plot %>% melt(id.vars=upper_level_whole)
ggplot(data_to_plot,aes_string(x=upper_level_whole,y=value))+
geom_point()
ggplot(data_to_plot,aes_string(x=upper_level_whole,y="value"))+
geom_point()
upper_level_whole
data_to_plot
data_to_plot <- data_to_plot %>% melt(id.vars=upper_level_whole)
ggplot(data_to_plot,aes_string(x=upper_level_whole,y="value"))+
geom_point()
data_to_plot
upper_level_whole
data_to_plot$variable <- NULL
colnames(data_to_plot) <- c("upper_group", "lower_group")
ggplot(data_to_plot,aes(x=upper_group,y=lower_group))+
geom_point()
ggplot(data_to_plot,aes(x=upper_group,y=lower_group))+
geom_hex()
upper_level
level_1 <- "r_iso_country_code"
level_2 <- "r_iso_country_code:gdlcode"
draws <- as_draws_df(model,variable =c(level_1,level_2) )
vars <- colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")==F]
level_1_vars <- vars[grep(paste0("^",level_1,"\\["),vars)]
level_1_levels <- gsub(".*\\[","",level_1_vars)
level_1_levels <- gsub(",.*","",level_1_levels)
level_2_vars <- vars[grep(paste0("^",level_2,"\\["),vars)]
all_data_to_plot <-list()
for (i in 1:length(level_1_vars))
{
upper_level <- level_1_levels[1]
upper_level_whole <- level_1_vars[1]
relevant_level_2_levels <- level_2_vars[grep(paste0(upper_level,"_"),level_2_vars)]
data_to_plot <- draws[c(upper_level_whole,relevant_level_2_levels)]
data_to_plot <- data_to_plot %>% melt(id.vars=upper_level_whole)
data_to_plot$variable <- NULL
colnames(data_to_plot) <- c("upper_group", "lower_group")
data_to_plot$upper_level <- upper_level
all_data_to_plot[[upper_level]] <- data_to_plot
}
all_data_to_plot
all_data_to_plot <-list()
for (i in 1:length(level_1_vars))
{
upper_level <- level_1_levels[i]
upper_level_whole <- level_1_vars[i]
relevant_level_2_levels <- level_2_vars[grep(paste0(upper_level,"_"),level_2_vars)]
data_to_plot <- draws[c(upper_level_whole,relevant_level_2_levels)]
data_to_plot <- data_to_plot %>% melt(id.vars=upper_level_whole)
data_to_plot$variable <- NULL
colnames(data_to_plot) <- c("upper_group", "lower_group")
data_to_plot$upper_level <- upper_level
all_data_to_plot[[upper_level]] <- data_to_plot
}
all_data_to_plot
all_data_to_plot <- bind_rows(all_data_to_plot)
all_data_to_plot
plot_random_cors <- ggplot(all_data_to_plot,aes(x=upper_group,y=lower_group))+
geom_hex()+
facet_wrap(~upper_level)
plot_random_cors
plot_levels_correlations <- function(
model,
level_1,
level_2,
){
draws <- as_draws_df(model,variable =c(level_1,level_2) )
vars <- colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")==F]
level_1_vars <- vars[grep(paste0("^",level_1,"\\["),vars)]
level_1_levels <- gsub(".*\\[","",level_1_vars)
level_1_levels <- gsub(",.*","",level_1_levels)
level_2_vars <- vars[grep(paste0("^",level_2,"\\["),vars)]
all_data_to_plot <-list()
for (i in 1:length(level_1_vars))
{
upper_level <- level_1_levels[i]
upper_level_whole <- level_1_vars[i]
relevant_level_2_levels <- level_2_vars[grep(paste0(upper_level,"_"),level_2_vars)]
data_to_plot <- draws[c(upper_level_whole,relevant_level_2_levels)]
data_to_plot <- data_to_plot %>% melt(id.vars=upper_level_whole)
data_to_plot$variable <- NULL
colnames(data_to_plot) <- c("upper_group", "lower_group")
data_to_plot$upper_level <- upper_level
all_data_to_plot[[upper_level]] <- data_to_plot
}
all_data_to_plot <- bind_rows(all_data_to_plot)
plot_random_cors <- ggplot(all_data_to_plot,aes(x=upper_group,y=lower_group))+
geom_hex()+
facet_wrap(~upper_level)
return(plot_random_cors)
}
plot_levels_correlations <- function(
model,
level_1,
level_2,
){
draws <- as_draws_df(model,variable =c(level_1,level_2) )
vars <- colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")==F]
level_1_vars <- vars[grep(paste0("^",level_1,"\\["),vars)]
level_1_levels <- gsub(".*\\[","",level_1_vars)
level_1_levels <- gsub(",.*","",level_1_levels)
level_2_vars <- vars[grep(paste0("^",level_2,"\\["),vars)]
all_data_to_plot <-list()
for (i in 1:length(level_1_vars))
{
upper_level <- level_1_levels[i]
upper_level_whole <- level_1_vars[i]
relevant_level_2_levels <- level_2_vars[grep(paste0(upper_level,"_"),level_2_vars)]
data_to_plot <- draws[c(upper_level_whole,relevant_level_2_levels)]
data_to_plot <- data_to_plot %>% melt(id.vars=upper_level_whole)
data_to_plot$variable <- NULL
colnames(data_to_plot) <- c("upper_group", "lower_group")
data_to_plot$upper_level <- upper_level
all_data_to_plot[[upper_level]] <- data_to_plot
}
all_data_to_plot <- bind_rows(all_data_to_plot)
plot_random_cors <- ggplot(all_data_to_plot,aes(x=upper_group,y=lower_group))+
geom_hex()+
facet_wrap(~upper_level)
return(plot_random_cors)
}
plot_levels_correlations <- function(
model,
level_1,
level_2
){
draws <- as_draws_df(model,variable =c(level_1,level_2) )
vars <- colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")==F]
level_1_vars <- vars[grep(paste0("^",level_1,"\\["),vars)]
level_1_levels <- gsub(".*\\[","",level_1_vars)
level_1_levels <- gsub(",.*","",level_1_levels)
level_2_vars <- vars[grep(paste0("^",level_2,"\\["),vars)]
all_data_to_plot <-list()
for (i in 1:length(level_1_vars))
{
upper_level <- level_1_levels[i]
upper_level_whole <- level_1_vars[i]
relevant_level_2_levels <- level_2_vars[grep(paste0(upper_level,"_"),level_2_vars)]
data_to_plot <- draws[c(upper_level_whole,relevant_level_2_levels)]
data_to_plot <- data_to_plot %>% melt(id.vars=upper_level_whole)
data_to_plot$variable <- NULL
colnames(data_to_plot) <- c("upper_group", "lower_group")
data_to_plot$upper_level <- upper_level
all_data_to_plot[[upper_level]] <- data_to_plot
}
all_data_to_plot <- bind_rows(all_data_to_plot)
plot_random_cors <- ggplot(all_data_to_plot,aes(x=upper_group,y=lower_group))+
geom_hex()+
facet_wrap(~upper_level)
return(plot_random_cors)
}
plot_levels_correlations <- function(
model,
level_1,
level_2
){
draws <- as_draws_df(model,variable =c(level_1,level_2) )
vars <- colnames(draws)
vars <- vars[vars %in% c(".chain",".iteration",".draw")==F]
level_1_vars <- vars[grep(paste0("^",level_1,"\\["),vars)]
level_1_levels <- gsub(".*\\[","",level_1_vars)
level_1_levels <- gsub(",.*","",level_1_levels)
level_2_vars <- vars[grep(paste0("^",level_2,"\\["),vars)]
all_data_to_plot <-list()
for (i in 1:length(level_1_vars))
{
upper_level <- level_1_levels[i]
upper_level_whole <- level_1_vars[i]
relevant_level_2_levels <- level_2_vars[grep(paste0(upper_level,"_"),level_2_vars)]
data_to_plot <- draws[c(upper_level_whole,relevant_level_2_levels)]
data_to_plot <- data_to_plot %>% melt(id.vars=upper_level_whole)
data_to_plot$variable <- NULL
colnames(data_to_plot) <- c("upper_group", "lower_group")
data_to_plot$upper_level <- upper_level
all_data_to_plot[[upper_level]] <- data_to_plot
}
all_data_to_plot <- bind_rows(all_data_to_plot)
plot_random_cors <- ggplot(all_data_to_plot,aes(x=upper_group,y=lower_group))+
geom_hex()+
facet_wrap(~upper_level)
return(plot_random_cors)
}
group_effects <- grep("^sd",all_vars, value=T)
group_effects
plot_levels_correlations(
model,
"sd_iso_country_code__Intercept",
"sd_iso_country_code:gdlcode__Intercept"
)
plot_levels_correlations(
model=model ,
level_1 = "sd_iso_country_code__Intercept",
level_2="sd_iso_country_code:gdlcode__Intercept"
)
model=model
level_1 = "sd_iso_country_code__Intercept"
level_2="sd_iso_country_code:gdlcode__Intercept"
level_2="sd_iso_country_code:gdlcode__Intercept"
level_1 = "sd_iso_country_code__Intercept"
model=model
model
draws <- as_draws_df(model,variable =c(level_1,level_2) )
draws
vars <- colnames(draws)
vars
plot_levels_correlations(
model=model ,
level_1 = "r_iso_country_code__Intercept",
level_2="r_iso_country_code:gdlcode__Intercept"
)
plot_levels_correlations(
model=model ,
level_1 = "r_iso_country_code",
level_2="r_iso_country_code:gdlcode"
)
group_effects
plot_levels_correlations(
model=model ,
level_1 = "r_iso_country_code:gdlcode",
level_2="r_iso_country_code:gdlcode:village"
)
source("~/research/phd/chapter-6-analysis/src/04-interpretation/02-overall-model.R", echo=TRUE)
source("~/research/phd/chapter-6-analysis/src/04-interpretation/02-overall-model.R", echo=TRUE)
group_effects
source("~/research/phd/chapter-6-analysis/src/04-interpretation/02-overall-model.R", echo=TRUE)
source("~/research/phd/chapter-6-analysis/src/04-interpretation/02-overall-model.R", echo=TRUE)
indicator_data
models <-  list(
# list(
#   tag="country_only",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code))
# ),
#
# list(
#   tag="country_county",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:gdlcode))
# ),
#
# list(
#   tag="country_county_village",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:gdlcode) +
#                (1 | iso_country_code:gdlcode:village))
# ),
#
# list(
#   tag="country_county_village_kg",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:gdlcode) +
#                (1 | iso_country_code:gdlcode:village)+
#                (1 | kg_class_name))
# ),
#
# list(
#   tag="country_county_village_kg_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:gdlcode) +
#                (1 | iso_country_code:gdlcode:village)+
#                (1 | kg_class_name)+
#                (1 | iso_country_code:id_form))
# ),
#
# list(
#   tag="country_county_village_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:gdlcode) +
#                (1 | iso_country_code:gdlcode:village)+
#                (1 | iso_country_code:id_form))
# ),
#
# list(
#   tag="country_county_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:gdlcode) +
#                (1 | iso_country_code:id_form))
# ),
#
#
# list(
#   tag="country_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:id_form))
# ),
#
# list(
#   tag="country_village_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:gdlcode:village)+
#                (1 | iso_country_code:id_form))
# ),
#
# list(
#   tag="country_village_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code) +
#                (1 | iso_country_code:gdlcode:village)+
#                (1 | iso_country_code:id_form))
# ),
#
#
# list(
#   tag="kg_only",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | kg_class_name))
# ),
#
# list(
#   tag="kg_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | kg_class_name)+
#                (1 | id_form))
# ),
#
# list(
#   tag="kg_village_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | kg_class_name)+
#                (1 | iso_country_code:gdlcode:village)+
#                (1 | iso_country_code:id_form))
# ),
#
# list(
#   tag="country_kg_form",
#   data=indicator_data,
#   formula=bf(log_tva ~ 1 +
#                (1 | iso_country_code)+
#                (1 | kg_class_name)+
#                (1 | iso_country_code:id_form))
# ),
list(
tag="country_village",
data=indicator_data,
formula=bf(log_tva ~ 1 +
(1 | iso_country_code) +
(1 | iso_country_code:village))
),
list(
tag="county_village",
data=indicator_data,
formula=bf(log_tva ~ 1 +
(1 | gdlcode) +
(1 | gdlcode:village))
),
list(
tag="kg_class_village",
data=indicator_data,
formula=bf(log_tva ~ 1 +
(1 | kg_class_name) +
(1 | kg_class_name:village))
),
list(
tag="country_kg_village",
data=indicator_data,
formula=bf(log_tva ~ 1 +
(1 | iso_country_code) +
(1 | kg_class_name) +
(1 | iso_country_code:village))
)
)
models
